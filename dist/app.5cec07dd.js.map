{"version":3,"sources":["src/app.ts"],"names":[],"mappings":"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","file":"app.5cec07dd.js","sourceRoot":"..","sourcesContent":["const AutoBindThis = (_: any, __: string, property: PropertyDescriptor) => {\r\n  let { value, writable, ...object } = property;\r\n\r\n  let returnObj = {\r\n    ...object,\r\n    get() {\r\n      return value.bind(this);\r\n    },\r\n    set() {},\r\n  };\r\n\r\n  return returnObj;\r\n};\r\n\r\ninterface ValidateAble {\r\n  value?: string | number | boolean;\r\n  name: string;\r\n  required?: boolean;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  min?: number;\r\n  max?: number;\r\n}\r\n\r\ninterface ValidStatus {\r\n  name: string;\r\n  valid: boolean;\r\n  validatorFails: ValidateAble[];\r\n}\r\ninterface inputElement {\r\n  name: string;\r\n  element: HTMLInputElement;\r\n}\r\ntype Validators = {\r\n  [Property in keyof ValidateAble]-?: (name: string) => boolean;\r\n};\r\ntype userTuple = [string, string, number];\r\n\r\nclass Validate implements Omit<Validators, \"value\" | \"name\"> {\r\n  valid: boolean = true;\r\n  validatorFails: ValidateAble[] = [];\r\n  constructor(public validation: ValidateAble) {\r\n    for (let validator in this.validation) {\r\n      const check = this[validator as keyof ValidateAble](validator);\r\n      if (typeof check === \"boolean\") {\r\n        if (!check) {\r\n          this.valid = check;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  value(_: string = \"value\") {\r\n    return this.validation.value;\r\n  }\r\n  name() {\r\n    return this.validation.name;\r\n  }\r\n  type() {\r\n    return typeof this.validation.value;\r\n  }\r\n  required(name?: string) {\r\n    if (name) {\r\n      return !!this.notNull() || !!this.sendError(name);\r\n    } else {\r\n      return !!this.notNull();\r\n    }\r\n  }\r\n  notNull() {\r\n    return this.value()?.toString().trim().length;\r\n  }\r\n  minLength(name: string) {\r\n    const length = this.notNull();\r\n    const minLength = this.validation.minLength;\r\n    if (typeof length === \"number\" && typeof minLength === \"number\" && length >= minLength) {\r\n      return true;\r\n    }\r\n    this.sendError(name);\r\n    return false;\r\n  }\r\n  maxLength(name: string) {\r\n    const length = this.notNull();\r\n    const maxLength = this.validation.maxLength;\r\n    if (typeof length === \"number\" && typeof maxLength === \"number\" && length <= maxLength) {\r\n      return true;\r\n    }\r\n    this.sendError(name);\r\n    return false;\r\n  }\r\n  min(name: string) {\r\n    let valid: boolean = false;\r\n    const min = this.validation?.min;\r\n    if (this.required() && min) {\r\n      if (this.type() === \"string\") {\r\n        const stringNumber = parseFloat(this.value() as string);\r\n\r\n        if (!isNaN(stringNumber) && stringNumber >= min) {\r\n          valid = true;\r\n        } else {\r\n          this.sendError(name);\r\n          valid = false;\r\n        }\r\n      } else if (this.type() === \"number\" && (this.value() as number) >= min) {\r\n        valid = true;\r\n      } else {\r\n        this.sendError(name);\r\n        valid = false;\r\n      }\r\n    }\r\n    return valid;\r\n  }\r\n  max(name: string) {\r\n    let valid: boolean = false;\r\n    const max = this.validation?.max;\r\n    if (this.required() && max) {\r\n      if (this.type() === \"string\") {\r\n        const stringNumber = parseFloat(this.value() as string);\r\n\r\n        if (!isNaN(stringNumber) && stringNumber <= max) {\r\n          valid = true;\r\n        } else {\r\n          this.sendError(name);\r\n          valid = false;\r\n        }\r\n      } else if (this.type() === \"number\" && (this.value() as number) <= max) {\r\n        valid = true;\r\n      } else {\r\n        this.sendError(name);\r\n        valid = false;\r\n      }\r\n    }\r\n    return valid;\r\n  }\r\n  sendError(name: string) {\r\n    this.validatorFails.push({ name, value: this.validation[name as keyof ValidateAble]! });\r\n    return false;\r\n  }\r\n}\r\n// Drag & Drop Interfaces\r\ninterface Draggable {\r\n  dragStartHandler(event: DragEvent): void;\r\n  dragEndHandler(event: DragEvent): void;\r\n}\r\n\r\ninterface DragTarget {\r\n  dragOverHandler(event: DragEvent): void;\r\n  dropHandler(event: DragEvent): void;\r\n  dragLeaveHandler(event: DragEvent): void;\r\n}\r\n\r\n// Project Type\r\nenum ProjectStatus {\r\n  Active,\r\n  Finished,\r\n}\r\n\r\nclass Project {\r\n  constructor(\r\n    public id: string,\r\n    public title: string,\r\n    public description: string,\r\n    public people: number,\r\n    public status: ProjectStatus\r\n  ) {}\r\n}\r\n\r\n// Project State Management\r\ntype Listener<T> = (items: T[]) => void;\r\n\r\nclass State<T> {\r\n  protected listeners: Listener<T>[] = [];\r\n\r\n  addListener(listenerFn: Listener<T>) {\r\n    this.listeners.push(listenerFn);\r\n  }\r\n}\r\n\r\nclass ProjectState extends State<Project> {\r\n  private projects: Project[] = [];\r\n  private static instance: ProjectState;\r\n\r\n  private constructor() {\r\n    super();\r\n  }\r\n\r\n  static getInstance() {\r\n    if (this.instance) {\r\n      return this.instance;\r\n    }\r\n    this.instance = new ProjectState();\r\n    return this.instance;\r\n  }\r\n\r\n  addProject(title: string, description: string, numOfPeople: number) {\r\n    const newProject = new Project(\r\n      Math.random().toString(),\r\n      title,\r\n      description,\r\n      numOfPeople,\r\n      ProjectStatus.Active\r\n    );\r\n    this.projects.push(newProject);\r\n    this.updateListeners();\r\n  }\r\n\r\n  moveProject(projectId: string, newStatus: ProjectStatus) {\r\n    const project = this.projects.find((prj) => prj.id === projectId);\r\n    if (project && project.status !== newStatus) {\r\n      project.status = newStatus;\r\n      this.updateListeners();\r\n    }\r\n  }\r\n\r\n  private updateListeners() {\r\n    for (const listenerFn of this.listeners) {\r\n      listenerFn(this.projects.slice());\r\n    }\r\n  }\r\n}\r\n\r\nconst projectState = ProjectState.getInstance();\r\n\r\n// Component Base Class\r\nabstract class Component<T extends HTMLElement, U extends HTMLElement> {\r\n  templateElement: HTMLTemplateElement;\r\n  hostElement: T;\r\n  element: U;\r\n\r\n  constructor(\r\n    templateId: string,\r\n    hostElementId: string,\r\n    insertAtStart: boolean,\r\n    newElementId?: string\r\n  ) {\r\n    this.templateElement = document.getElementById(templateId)! as HTMLTemplateElement;\r\n    this.hostElement = document.getElementById(hostElementId)! as T;\r\n\r\n    const importedNode = document.importNode(this.templateElement.content, true);\r\n    this.element = importedNode.firstElementChild as U;\r\n    if (newElementId) {\r\n      this.element.id = newElementId;\r\n    }\r\n\r\n    this.attach(insertAtStart);\r\n  }\r\n\r\n  private attach(insertAtBeginning: boolean) {\r\n    this.hostElement.insertAdjacentElement(\r\n      insertAtBeginning ? \"afterbegin\" : \"beforeend\",\r\n      this.element\r\n    );\r\n  }\r\n\r\n  abstract configure(): void;\r\n  abstract renderContent(): void;\r\n}\r\n\r\n// ProjectItem Class\r\nclass ProjectItem extends Component<HTMLUListElement, HTMLLIElement> implements Draggable {\r\n  private project: Project;\r\n\r\n  get persons() {\r\n    if (this.project.people === 1) {\r\n      return \"1 person\";\r\n    } else {\r\n      return `${this.project.people} persons`;\r\n    }\r\n  }\r\n\r\n  constructor(hostId: string, project: Project) {\r\n    super(\"single-project\", hostId, false, project.id);\r\n    this.project = project;\r\n\r\n    this.configure();\r\n    this.renderContent();\r\n  }\r\n\r\n  @AutoBindThis\r\n  dragStartHandler(event: DragEvent) {\r\n    event.dataTransfer!.setData(\"text/plain\", this.project.id);\r\n    event.dataTransfer!.effectAllowed = \"move\";\r\n  }\r\n\r\n  dragEndHandler(_: DragEvent) {\r\n    console.log(\"DragEnd\");\r\n  }\r\n\r\n  configure() {\r\n    this.element.addEventListener(\"dragstart\", this.dragStartHandler);\r\n    this.element.addEventListener(\"dragend\", this.dragEndHandler);\r\n  }\r\n\r\n  renderContent() {\r\n    this.element.querySelector(\"h2\")!.textContent = this.project.title;\r\n    this.element.querySelector(\"h3\")!.textContent = this.persons + \" assigned\";\r\n    this.element.querySelector(\"p\")!.textContent = this.project.description;\r\n  }\r\n}\r\n\r\n// ProjectList Class\r\nclass ProjectList extends Component<HTMLDivElement, HTMLElement> implements DragTarget {\r\n  assignedProjects: Project[];\r\n\r\n  constructor(private type: \"active\" | \"finished\") {\r\n    super(\"project-list\", \"app\", false, `${type}-projects`);\r\n    this.assignedProjects = [];\r\n\r\n    this.configure();\r\n    this.renderContent();\r\n  }\r\n\r\n  @AutoBindThis\r\n  dragOverHandler(event: DragEvent) {\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\r\n      event.preventDefault();\r\n      const listEl = this.element.querySelector(\"ul\")!;\r\n      listEl.classList.add(\"droppable\");\r\n    }\r\n  }\r\n\r\n  @AutoBindThis\r\n  dropHandler(event: DragEvent) {\r\n    const prjId = event.dataTransfer!.getData(\"text/plain\");\r\n    projectState.moveProject(\r\n      prjId,\r\n      this.type === \"active\" ? ProjectStatus.Active : ProjectStatus.Finished\r\n    );\r\n  }\r\n\r\n  @AutoBindThis\r\n  dragLeaveHandler(_: DragEvent) {\r\n    const listEl = this.element.querySelector(\"ul\")!;\r\n    listEl.classList.remove(\"droppable\");\r\n  }\r\n\r\n  configure() {\r\n    this.element.addEventListener(\"dragover\", this.dragOverHandler);\r\n    this.element.addEventListener(\"dragleave\", this.dragLeaveHandler);\r\n    this.element.addEventListener(\"drop\", this.dropHandler);\r\n\r\n    projectState.addListener((projects: Project[]) => {\r\n      const relevantProjects = projects.filter((prj) => {\r\n        if (this.type === \"active\") {\r\n          return prj.status === ProjectStatus.Active;\r\n        }\r\n        return prj.status === ProjectStatus.Finished;\r\n      });\r\n      this.assignedProjects = relevantProjects;\r\n      this.renderProjects();\r\n    });\r\n  }\r\n\r\n  renderContent() {\r\n    const listId = `${this.type}-projects-list`;\r\n    this.element.querySelector(\"ul\")!.id = listId;\r\n    this.element.querySelector(\"h2\")!.textContent = this.type.toUpperCase() + \" PROJECTS\";\r\n  }\r\n\r\n  private renderProjects() {\r\n    const listEl = document.getElementById(`${this.type}-projects-list`)! as HTMLUListElement;\r\n    listEl.innerHTML = \"\";\r\n    for (const prjItem of this.assignedProjects) {\r\n      new ProjectItem(this.element.querySelector(\"ul\")!.id, prjItem);\r\n    }\r\n  }\r\n}\r\n\r\n// ProjectInput Class\r\nclass ProjectInput extends Component<HTMLDivElement, HTMLFormElement> {\r\n  titleInputElement: HTMLInputElement;\r\n  descriptionInputElement: HTMLInputElement;\r\n  peopleInputElement: HTMLInputElement;\r\n  inputElements: inputElement[] = [];\r\n  userTuples = [\"string\", \"string\", \"number\"];\r\n  constructor() {\r\n    super(\"project-input\", \"app\", true, \"user-input\");\r\n    this.titleInputElement = this.element.querySelector(\"#title\") as HTMLInputElement;\r\n    this.descriptionInputElement = this.element.querySelector(\"#description\") as HTMLInputElement;\r\n    this.peopleInputElement = this.element.querySelector(\"#people\") as HTMLInputElement;\r\n    this.inputElements.push(\r\n      { name: \"title\", element: this.titleInputElement },\r\n      { name: \"description\", element: this.descriptionInputElement },\r\n      { name: \"people\", element: this.peopleInputElement }\r\n    );\r\n    this.configure();\r\n  }\r\n\r\n  configure() {\r\n    this.element.addEventListener(\"submit\", this.submitHandler);\r\n  }\r\n\r\n  renderContent() {}\r\n  validate(obj: ValidateAble) {\r\n    const { validatorFails, valid } = new Validate(obj);\r\n\r\n    return { validatorFails, valid };\r\n  }\r\n  validateArray<K>(arr: ValidateAble[], data: K & inputElement[]): ValidStatus[] {\r\n    let validStatus: ValidStatus[] = [];\r\n    arr.forEach((obj) => {\r\n      const {\r\n        name,\r\n        element: { value },\r\n      } = data.find((dt: any) => dt.name === obj.name)!;\r\n      let valid = this.validate({ ...obj, value });\r\n      validStatus.push({ name, ...valid });\r\n    });\r\n    return validStatus;\r\n  }\r\n  private mapTuplesIntoArray(this: any, tuple: string | number | boolean, i: number) {\r\n    if (tuple === \"string\") {\r\n      return this[i].element.value.toString();\r\n    } else if (tuple === \"number\") {\r\n      return parseFloat(this[i].element.value);\r\n    } else if (tuple === \"boolean\") {\r\n      return !!this[i].element.value;\r\n    }\r\n  }\r\n  private gatherUserInput() {\r\n    const validation = this.validateArray(\r\n      [\r\n        { name: \"title\", maxLength: 10, minLength: 5 },\r\n        { name: \"people\", max: 5, min: 5, required: true },\r\n        { name: \"description\", required: true },\r\n      ],\r\n      this.inputElements\r\n    );\r\n    for (let valid of validation) {\r\n      console.log(valid);\r\n      if (!valid.valid) {\r\n        alert(\r\n          `Please ensure ${valid.name} to valid and fullfil ${valid.validatorFails.map(\r\n            (valid) => `${valid.name} to ${valid.value} `\r\n          )}`\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    return this.userTuples.map(this.mapTuplesIntoArray, this.inputElements);\r\n  }\r\n\r\n  private clearInputs() {\r\n    this.titleInputElement.value = \"\";\r\n    this.descriptionInputElement.value = \"\";\r\n    this.peopleInputElement.value = \"\";\r\n  }\r\n\r\n  @AutoBindThis\r\n  private submitHandler(event: Event) {\r\n    event.preventDefault();\r\n    const userInput = this.gatherUserInput();\r\n    if (Array.isArray(userInput)) {\r\n      const [title, desc, people] = userInput;\r\n      projectState.addProject(title, desc, people);\r\n      this.clearInputs();\r\n    }\r\n  }\r\n}\r\n\r\nconst prjInput = new ProjectInput();\r\nconst activePrjList = new ProjectList(\"active\");\r\nconst finishedPrjList = new ProjectList(\"finished\");\r\n"]}